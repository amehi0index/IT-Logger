{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\savor\\\\OneDrive\\\\myGitProjects\\\\react-it-logger\\\\client\\\\src\\\\components\\\\layout\\\\SearchBar.js\";\nimport React, { useRef, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { searchLogs, clearSearch } from '../../actions/logActions';\n\nconst SearchBar = ({\n  log: {\n    logs,\n    filtered\n  },\n  searchLogs,\n  clearSearch\n}) => {\n  const text = useRef('');\n  useEffect(() => {\n    if (filtered === null) {\n      text.current.value = '';\n    } //eslint-disable-next-line\n\n  }, []);\n\n  const onChange = e => {\n    if (text.current.value !== '') {\n      searchLogs(e.target.value);\n    } else {\n      clearSearch();\n    }\n  };\n\n  const onClick = () => {\n    if (text.current.value !== '') {\n      clearSearch();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"nav\", {\n    style: {\n      marginBottom: '30px'\n    },\n    className: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"search\",\n    type: \"search\",\n    placeholder: \"Search Logs...\",\n    ref: text,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label-icon\",\n    htmlFor: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 72\n    }\n  }, \"search\")), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons\",\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }, \"close\")))));\n};\n\nconst mapStateToProps = state => ({\n  log: state.log //assign state.log ( from log:logReducer) to component prop named log\n\n});\n\nSearchBar.propTypes = {\n  log: PropTypes.object.isRequired,\n  searchLogs: PropTypes.func.isRequired,\n  clearSearch: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, {\n  searchLogs,\n  clearSearch\n})(SearchBar);","map":{"version":3,"sources":["C:/Users/savor/OneDrive/myGitProjects/react-it-logger/client/src/components/layout/SearchBar.js"],"names":["React","useRef","useEffect","connect","PropTypes","searchLogs","clearSearch","SearchBar","log","logs","filtered","text","current","value","onChange","e","target","onClick","marginBottom","mapStateToProps","state","propTypes","object","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAuBC,SAAvB,QAAwC,OAAxC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,0BAAxC;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,GAAG,EAAE;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAP;AAA2BL,EAAAA,UAA3B;AAAuCC,EAAAA;AAAvC,CAAD,KAA0D;AAExE,QAAMK,IAAI,GAAGV,MAAM,CAAC,EAAD,CAAnB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGQ,QAAQ,KAAK,IAAhB,EAAqB;AACjBC,MAAAA,IAAI,CAACC,OAAL,CAAaC,KAAb,GAAoB,EAApB;AAAuB,KAFf,CAGZ;;AACH,GAJQ,EAIP,EAJO,CAAT;;AAMA,QAAMC,QAAQ,GAAIC,CAAD,IAAO;AACpB,QAAIJ,IAAI,CAACC,OAAL,CAAaC,KAAb,KAAuB,EAA3B,EAA8B;AAC1BR,MAAAA,UAAU,CAACU,CAAC,CAACC,MAAF,CAASH,KAAV,CAAV;AACH,KAFD,MAEK;AACDP,MAAAA,WAAW;AACd;AACJ,GAND;;AAOA,QAAMW,OAAO,GAAG,MAAM;AAClB,QAAIN,IAAI,CAACC,OAAL,CAAaC,KAAb,KAAuB,EAA3B,EAA8B;AAC5BP,MAAAA,WAAW;AACZ;AAEJ,GALD;;AAOA,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEY,MAAAA,YAAY,EAAE;AAAhB,KAAZ;AAAsC,IAAA,SAAS,EAAC,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,EAAE,EAAC,QAAV;AAAmB,IAAA,IAAI,EAAC,QAAxB;AAAiC,IAAA,WAAW,EAAC,gBAA7C;AAA+D,IAAA,GAAG,EAAEP,IAApE;AAA2E,IAAA,QAAQ,EAAEG,QAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAO,IAAA,SAAS,EAAC,YAAjB;AAA8B,IAAA,OAAO,EAAC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA+C;AAAG,IAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA/C,CAFJ,eAGI;AAAG,IAAA,SAAS,EAAC,gBAAb;AAA8B,IAAA,OAAO,EAAEG,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHJ,CADJ,CADJ,CADJ,CADJ;AAaH,CArCD;;AAuCA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BZ,EAAAA,GAAG,EAAEY,KAAK,CAACZ,GADmB,CACZ;;AADY,CAAL,CAA7B;;AAIAD,SAAS,CAACc,SAAV,GAAsB;AAClBb,EAAAA,GAAG,EAAEJ,SAAS,CAACkB,MAAV,CAAiBC,UADJ;AAElBlB,EAAAA,UAAU,EAAED,SAAS,CAACoB,IAAV,CAAeD,UAFT;AAGlBjB,EAAAA,WAAW,EAAEF,SAAS,CAACoB,IAAV,CAAeD;AAHV,CAAtB;AAMA,eAAepB,OAAO,CAAEgB,eAAF,EAAmB;AAAEd,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAnB,CAAP,CAAuDC,SAAvD,CAAf","sourcesContent":["import React, { useRef,useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { searchLogs, clearSearch } from '../../actions/logActions'\r\n\r\nconst SearchBar = ({ log: { logs, filtered }, searchLogs, clearSearch }) => {\r\n\r\n    const text = useRef('')\r\n\r\n    useEffect(() => {\r\n        if(filtered === null){\r\n            text.current.value =''}\r\n        //eslint-disable-next-line\r\n    },[])\r\n\r\n    const onChange = (e) => {\r\n        if (text.current.value !== ''){\r\n            searchLogs(e.target.value) \r\n        }else{\r\n            clearSearch()\r\n        }\r\n    }\r\n    const onClick = () => {\r\n        if (text.current.value !== ''){\r\n          clearSearch()\r\n        }\r\n \r\n    }\r\n\r\n    return (\r\n        <nav style={{ marginBottom: '30px' }} className=\"blue\">\r\n            <div className=\"nav-wrapper\">\r\n                <form>\r\n                    <div className=\"input-field\">\r\n                        <input id=\"search\" type=\"search\" placeholder='Search Logs...'  ref={text}  onChange={onChange} />\r\n                        <label className=\"label-icon\" htmlFor=\"search\"><i className=\"material-icons\">search</i></label>\r\n                        <i className=\"material-icons\" onClick={onClick}>close</i>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    log: state.log    //assign state.log ( from log:logReducer) to component prop named log\r\n})\r\n\r\nSearchBar.propTypes = {\r\n    log: PropTypes.object.isRequired,\r\n    searchLogs: PropTypes.func.isRequired,\r\n    clearSearch: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect (mapStateToProps, { searchLogs, clearSearch })(SearchBar)\r\n\r\n"]},"metadata":{},"sourceType":"module"}