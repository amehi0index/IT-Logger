{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\savor\\\\OneDrive\\\\myGitProjects\\\\react-it-logger\\\\src\\\\components\\\\logs\\\\Logs.js\";\nimport React, { useState, useEffect } from 'react';\nimport LogItem from './LogItem';\nimport Preloader from '../layout/Preloader';\n\nconst Logs = () => {\n  const [logs, setLogs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    getLogs(); //eslint-disable-next-line\n  }, []);\n\n  const getLogs = async () => {\n    setLoading(true);\n    const res = await fetch('/logs');\n    const data = await res.json();\n    setLogs(data);\n    setLoading(false);\n  };\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Preloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"collection with-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"collection-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, \"System Logs\")), !loading && logs.length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 20\n    }\n  }, \"No Logs To Display\") : logs.map(log => /*#__PURE__*/React.createElement(LogItem, {\n    key: log.id,\n    log: log,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 36\n    }\n  })));\n};\n\nexport default Logs;","map":{"version":3,"sources":["C:/Users/savor/OneDrive/myGitProjects/react-it-logger/src/components/logs/Logs.js"],"names":["React","useState","useEffect","LogItem","Preloader","Logs","logs","setLogs","loading","setLoading","getLogs","res","fetch","data","json","length","map","log","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,OAAO,GADK,CAEZ;AACH,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMA,OAAO,GAAG,YAAW;AACvBD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,OAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEAP,IAAAA,OAAO,CAACM,IAAD,CAAP;AACAJ,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAPD;;AASA,MAAGD,OAAH,EAAW;AACP,wBAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAED,sBACI;AAAI,IAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ,EAIK,CAACA,OAAD,IAAaF,IAAI,CAACS,MAAL,KAAgB,CAA7B,gBACM;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADN,GAEMT,IAAI,CAACU,GAAL,CAASC,GAAG,iBAAI,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,GAAG,CAACC,EAAlB;AAAsB,IAAA,GAAG,EAAED,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,CANX,CADJ;AAWH,CAjCD;;AAmCA,eAAeZ,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport LogItem from './LogItem'\r\nimport Preloader from '../layout/Preloader'\r\n\r\nconst Logs = () => {\r\n    const [logs, setLogs] = useState([])\r\n    const [loading, setLoading] = useState(false) \r\n\r\n    useEffect(() => {\r\n        getLogs()\r\n        //eslint-disable-next-line\r\n    }, [])\r\n\r\n    const getLogs = async() => {\r\n        setLoading(true)\r\n        const res = await fetch('/logs')\r\n        const data = await res.json()\r\n\r\n        setLogs(data)\r\n        setLoading(false)\r\n    }\r\n\r\n    if(loading){\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <ul className=\"collection with-header\">\r\n            <li className=\"collection-header\">\r\n                <h4 className=\"center\">System Logs</h4>\r\n            </li>\r\n            {!loading  && logs.length === 0 \r\n                ? (<p className=\"center\">No Logs To Display</p>) \r\n                : (logs.map(log => <LogItem key={log.id} log={log} />))\r\n            }\r\n      </ul>\r\n    )\r\n}\r\n\r\nexport default Logs\r\n"]},"metadata":{},"sourceType":"module"}