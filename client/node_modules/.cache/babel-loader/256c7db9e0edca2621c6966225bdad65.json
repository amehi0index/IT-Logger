{"ast":null,"code":"import { GET_LOGS, SET_LOADING, LOGS_ERROR, ADD_LOG, UPDATE_LOG, DELETE_LOG, SET_CURRENT, CLEAR_CURRENT, SEARCH_LOGS } from '../actions/types';\nimport { logDOM } from '@testing-library/react';\nconst initialState = {\n  logs: null,\n  filtered: null,\n  current: null,\n  loading: false,\n  error: null\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case GET_LOGS:\n      return { ...state,\n        logs: action.payload,\n        loading: false\n      };\n\n    case ADD_LOG:\n      return { ...state,\n        logs: [...state.logs, action.payload],\n        //copy logs, add new log from payload to logs arr copy\n        loading: false\n      };\n\n    case DELETE_LOG:\n      return { ...state,\n        logs: state.logs.filter(log => log.id !== action.payload),\n        loading: false\n      };\n\n    case UPDATE_LOG:\n      return { ...state,\n        logs: state.logs.map(log => log.id === action.payload.id ? action.payload : log)\n      };\n\n    case SEARCH_LOGS:\n      return { ...state,\n        logs: action.payload\n      };\n\n    case SET_CURRENT:\n      return { ...state,\n        current: action.payload\n      };\n\n    case CLEAR_CURRENT:\n      return { ...state,\n        current: null\n      };\n\n    case SET_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    case LOGS_ERROR:\n      console.error(action.payload);\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return { ...state\n      };\n  }\n});","map":{"version":3,"sources":["C:/Users/savor/OneDrive/myGitProjects/react-it-logger/client/src/reducers/logReducer.js"],"names":["GET_LOGS","SET_LOADING","LOGS_ERROR","ADD_LOG","UPDATE_LOG","DELETE_LOG","SET_CURRENT","CLEAR_CURRENT","SEARCH_LOGS","logDOM","initialState","logs","filtered","current","loading","error","state","action","type","payload","filter","log","id","map","console"],"mappings":"AAAA,SACIA,QADJ,EAEIC,WAFJ,EAGIC,UAHJ,EAIIC,OAJJ,EAKIC,UALJ,EAMIC,UANJ,EAOIC,WAPJ,EAQIC,aARJ,EASIC,WATJ,QAUO,kBAVP;AAWA,SAASC,MAAT,QAAuB,wBAAvB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,IADW;AAEjBC,EAAAA,QAAQ,EAAE,IAFO;AAGjBC,EAAAA,OAAO,EAAE,IAHQ;AAIjBC,EAAAA,OAAO,EAAE,KAJQ;AAKjBC,EAAAA,KAAK,EAAE;AALU,CAArB;AAQA,gBAAe,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAC7C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKlB,QAAL;AACI,aAAM,EACF,GAAGgB,KADD;AAEFL,QAAAA,IAAI,EAAEM,MAAM,CAACE,OAFX;AAGFL,QAAAA,OAAO,EAAE;AAHP,OAAN;;AAKJ,SAAKX,OAAL;AACI,aAAM,EACF,GAAGa,KADD;AAEFL,QAAAA,IAAI,EAAE,CAAC,GAAGK,KAAK,CAACL,IAAV,EAAgBM,MAAM,CAACE,OAAvB,CAFJ;AAEqC;AACvCL,QAAAA,OAAO,EAAE;AAHP,OAAN;;AAKJ,SAAKT,UAAL;AACI,aAAM,EACF,GAAGW,KADD;AAEFL,QAAAA,IAAI,EAAEK,KAAK,CAACL,IAAN,CAAWS,MAAX,CAAkBC,GAAG,IAAIA,GAAG,CAACC,EAAJ,KAAWL,MAAM,CAACE,OAA3C,CAFJ;AAGFL,QAAAA,OAAO,EAAE;AAHP,OAAN;;AAKJ,SAAKV,UAAL;AACI,aAAM,EACF,GAAGY,KADD;AAEFL,QAAAA,IAAI,EAAEK,KAAK,CAACL,IAAN,CAAWY,GAAX,CAAeF,GAAG,IACpBA,GAAG,CAACC,EAAJ,KAAWL,MAAM,CAACE,OAAP,CAAeG,EAA1B,GAA+BL,MAAM,CAACE,OAAtC,GAAgDE,GAD9C;AAFJ,OAAN;;AAKJ,SAAKb,WAAL;AACI,aAAM,EACF,GAAGQ,KADD;AAEFL,QAAAA,IAAI,EAAEM,MAAM,CAACE;AAFX,OAAN;;AAIJ,SAAKb,WAAL;AACI,aAAM,EACF,GAAGU,KADD;AAEFH,QAAAA,OAAO,EAAEI,MAAM,CAACE;AAFd,OAAN;;AAIJ,SAAKZ,aAAL;AACI,aAAM,EACF,GAAGS,KADD;AAEFH,QAAAA,OAAO,EAAE;AAFP,OAAN;;AAIJ,SAAKZ,WAAL;AACI,aAAM,EACF,GAAGe,KADD;AAEFF,QAAAA,OAAO,EAAE;AAFP,OAAN;;AAIJ,SAAKZ,UAAL;AACIsB,MAAAA,OAAO,CAACT,KAAR,CAAcE,MAAM,CAACE,OAArB;AACA,aAAM,EACF,GAAGH,KADD;AAEFD,QAAAA,KAAK,EAAEE,MAAM,CAACE;AAFZ,OAAN;;AAKJ;AACI,aAAM,EACF,GAAGH;AADD,OAAN;AArDR;AA0DH,CA3DD","sourcesContent":["import { \r\n    GET_LOGS,\r\n    SET_LOADING, \r\n    LOGS_ERROR,\r\n    ADD_LOG,\r\n    UPDATE_LOG,\r\n    DELETE_LOG,\r\n    SET_CURRENT,\r\n    CLEAR_CURRENT,\r\n    SEARCH_LOGS,\r\n} from '../actions/types'\r\nimport { logDOM } from '@testing-library/react'\r\n    \r\nconst initialState = {\r\n    logs: null,\r\n    filtered: null,\r\n    current: null,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type){\r\n        case GET_LOGS: \r\n            return{\r\n                ...state,\r\n                logs: action.payload,\r\n                loading: false,\r\n            }\r\n        case ADD_LOG:\r\n            return{\r\n                ...state,\r\n                logs: [...state.logs, action.payload], //copy logs, add new log from payload to logs arr copy\r\n                loading: false,\r\n            }\r\n        case DELETE_LOG:\r\n            return{\r\n                ...state,\r\n                logs: state.logs.filter(log => log.id !== action.payload),\r\n                loading: false,\r\n            }\r\n        case UPDATE_LOG: \r\n            return{\r\n                ...state,\r\n                logs: state.logs.map(log => \r\n                    log.id === action.payload.id ? action.payload : log)\r\n            }\r\n        case SEARCH_LOGS:\r\n            return{\r\n                ...state,\r\n                logs: action.payload\r\n            }\r\n        case SET_CURRENT:\r\n            return{\r\n                ...state,\r\n                current: action.payload,\r\n            }\r\n        case CLEAR_CURRENT:\r\n            return{\r\n                ...state,\r\n                current: null,\r\n            }\r\n        case SET_LOADING:\r\n            return{\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case LOGS_ERROR:\r\n            console.error(action.payload)\r\n            return{\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n       \r\n        default:\r\n            return{\r\n                ...state\r\n            }\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}