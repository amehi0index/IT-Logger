{"ast":null,"code":"import { GET_LOGS, SET_LOADING, LOGS_ERROR, ADD_LOG, UPDATE_LOG, DELETE_LOG, SET_CURRENT, CLEAR_CURRENT, SEARCH_LOGS } from './types';\n/*export const getLogs = () => {\r\n    return async (dispatch) =>  {\r\n        setLoading()\r\n\r\n        const res = await fetch('/logs')\r\n        const data = await res.json()\r\n\r\n        dispatch({\r\n            type: GET_LOGS,\r\n            payload: data\r\n        })\r\n    }\r\n}*/\n//Get logs from server\n\nexport const getLogs = () => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch('/api/logs');\n    const data = await res.json();\n    dispatch({\n      type: GET_LOGS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.message\n    });\n  }\n}; //Add new log\n\nexport const addLog = log => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch('/api/logs', {\n      method: 'POST',\n      body: JSON.stringify(log),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n    dispatch({\n      type: ADD_LOG,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.message\n    });\n  }\n}; //Delete a log from server\n\nexport const deleteLog = id => async dispatch => {\n  try {\n    setLoading();\n    await fetch(`/api/logs/${id}`, {\n      method: 'DELETE'\n    });\n    dispatch({\n      type: DELETE_LOG,\n      payload: id\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.message\n    });\n  }\n}; //Update log on server\n\nexport const updateLog = log => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch(`/api/logs/${log.id}`, {\n      method: 'PUT',\n      body: JSON.stringify(log),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n    dispatch({\n      type: UPDATE_LOG,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.message\n    });\n  }\n}; //Search SERVER logs\n\nexport const searchLogs = text => {\n  setLoading();\n  return {\n    type: FILTER_CONTACTS,\n    payload: text\n  };\n}; //Set current log\n\nexport const setCurrent = log => {\n  return {\n    type: SET_CURRENT,\n    payload: log\n  };\n}; //Clear current log\n\nexport const clearCurrent = () => {\n  return {\n    type: CLEAR_CURRENT\n  };\n}; //Set loading to true\n\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};","map":{"version":3,"sources":["C:/Users/savor/OneDrive/myGitProjects/react-it-logger/client/src/actions/logActions.js"],"names":["GET_LOGS","SET_LOADING","LOGS_ERROR","ADD_LOG","UPDATE_LOG","DELETE_LOG","SET_CURRENT","CLEAR_CURRENT","SEARCH_LOGS","getLogs","dispatch","setLoading","res","fetch","data","json","type","payload","err","message","addLog","log","method","body","JSON","stringify","headers","deleteLog","id","updateLog","searchLogs","text","FILTER_CONTACTS","setCurrent","clearCurrent"],"mappings":"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","sourcesContent":["\r\nimport { \r\n    GET_LOGS,\r\n    SET_LOADING, \r\n    LOGS_ERROR,\r\n    ADD_LOG,\r\n    UPDATE_LOG,\r\n    DELETE_LOG,\r\n    SET_CURRENT,\r\n    CLEAR_CURRENT,\r\n    SEARCH_LOGS,\r\n} from './types'\r\n\r\n/*export const getLogs = () => {\r\n    return async (dispatch) =>  {\r\n        setLoading()\r\n\r\n        const res = await fetch('/logs')\r\n        const data = await res.json()\r\n\r\n        dispatch({\r\n            type: GET_LOGS,\r\n            payload: data\r\n        })\r\n    }\r\n}*/\r\n\r\n//Get logs from server\r\nexport const getLogs = () => async (dispatch) => {\r\n    try {\r\n        \r\n        setLoading()\r\n\r\n        const res = await fetch('/api/logs')\r\n        const data = await res.json()\r\n\r\n        dispatch({\r\n            type: GET_LOGS,\r\n            payload: data\r\n        })\r\n        \r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGS_ERROR,\r\n            payload: err.message\r\n        })\r\n    }\r\n}\r\n\r\n//Add new log\r\nexport const addLog = (log) => async (dispatch) => {\r\n    try {\r\n        \r\n        setLoading()\r\n\r\n        const res = await fetch('/api/logs',  {\r\n            method: 'POST',\r\n            body: JSON.stringify(log),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        const data = await res.json()\r\n\r\n        dispatch({\r\n            type: ADD_LOG,\r\n            payload: data\r\n        })\r\n        \r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGS_ERROR,\r\n            payload: err.message\r\n        })\r\n    }\r\n}\r\n\r\n//Delete a log from server\r\nexport const deleteLog = (id) => async (dispatch) => {\r\n    try {\r\n        \r\n        setLoading()\r\n\r\n        await fetch(`/api/logs/${id}`, {\r\n            method: 'DELETE'\r\n        })\r\n\r\n        dispatch({\r\n            type: DELETE_LOG,\r\n            payload: id\r\n        })\r\n        \r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGS_ERROR,\r\n            payload: err.message\r\n        })\r\n    }\r\n}\r\n\r\n//Update log on server\r\nexport const updateLog = (log) => async (dispatch) => {\r\n    try {\r\n        \r\n        setLoading()\r\n\r\n    const res = await fetch(`/api/logs/${log.id}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(log),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        const data = await res.json()\r\n\r\n        dispatch({\r\n            type: UPDATE_LOG,\r\n            payload: data\r\n        })\r\n        \r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGS_ERROR,\r\n            payload: err.message\r\n        })\r\n    }\r\n}\r\n\r\n//Search SERVER logs\r\nexport const searchLogs = (text) => {\r\n \r\n        \r\n        setLoading()\r\n\r\n        return({\r\n            type: FILTER_CONTACTS,\r\n            payload: text\r\n        })\r\n  \r\n}\r\n\r\n//Set current log\r\nexport const setCurrent = (log) => {\r\n    return{\r\n        type: SET_CURRENT,\r\n        payload: log\r\n    }\r\n}\r\n\r\n//Clear current log\r\nexport const clearCurrent = ()=> {\r\n    return{\r\n        type: CLEAR_CURRENT,\r\n    }\r\n}\r\n\r\n//Set loading to true\r\nexport const setLoading = () => {\r\n    return{\r\n        type:SET_LOADING\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}