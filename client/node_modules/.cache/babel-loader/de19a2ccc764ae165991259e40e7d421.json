{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\savor\\\\OneDrive\\\\myGitProjects\\\\react-it-logger\\\\client\\\\src\\\\components\\\\logs\\\\Logs.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport LogItem from './LogItem';\nimport Preloader from '../layout/Preloader';\nimport PropTypes from 'prop-types';\nimport { getLogs } from '../../actions/logActions';\n\nconst Logs = ({\n  log: {\n    logs,\n    filtered,\n    loading\n  },\n  getLogs\n}) => {\n  useEffect(() => {\n    getLogs(); //eslint-disable-next-line\n  }, []);\n\n  if (loading || logs === null) {\n    return /*#__PURE__*/React.createElement(Preloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return;\n\n  /*#__PURE__*/\n  React.createElement(\"ul\", {\n    className: \"collection with-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"collection-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, \"System Logs\")), logs !== null && !loading ? /*#__PURE__*/React.createElement(React.Fragment, null, filtered !== null ? filtered.map(log => /*#__PURE__*/React.createElement(LogItem, {\n    log: log,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 29\n    }\n  })) : logs.map(log => /*#__PURE__*/React.createElement(LogItem, {\n    log: log,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 29\n    }\n  }))) : /*#__PURE__*/React.createElement(Preloader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 20\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  log: state.log //assign state.log ( from log:logReducer) to component prop named log\n\n});\n\nLogs.propTypes = {\n  log: PropTypes.object.isRequired,\n  getLogs: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, {\n  getLogs\n})(Logs);","map":{"version":3,"sources":["C:/Users/savor/OneDrive/myGitProjects/react-it-logger/client/src/components/logs/Logs.js"],"names":["React","useEffect","connect","LogItem","Preloader","PropTypes","getLogs","Logs","log","logs","filtered","loading","map","mapStateToProps","state","propTypes","object","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAyB,aAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,0BAAxB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,GAAG,EAAE;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB,GAAP;AAAoCL,EAAAA;AAApC,CAAD,KAAmD;AAE5DL,EAAAA,SAAS,CAAC,MAAM;AACbK,IAAAA,OAAO,GADM,CAEZ;AACH,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAGK,OAAO,IAAIF,IAAI,KAAK,IAAvB,EAA4B;AACxB,wBAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAED;;AACI;AAAA;AAAI,IAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ,EAKAA,IAAI,KAAK,IAAT,IAAiB,CAACE,OAAlB,gBAA8B,0CACrBD,QAAQ,KAAK,IAAb,GACKA,QAAQ,CAACE,GAAT,CAAaJ,GAAG,iBAEV,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFN,CADL,GAMKC,IAAI,CAACG,GAAL,CAASJ,GAAG,iBAEN,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFN,CAPgB,CAA9B,gBAYW,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBX;AAoBP,CAhCD;;AAoCA,MAAMK,eAAe,GAAGC,KAAK,KAAK;AAC9BN,EAAAA,GAAG,EAAEM,KAAK,CAACN,GADmB,CACZ;;AADY,CAAL,CAA7B;;AAIAD,IAAI,CAACQ,SAAL,GAAiB;AACbP,EAAAA,GAAG,EAAEH,SAAS,CAACW,MAAV,CAAiBC,UADT;AAEbX,EAAAA,OAAO,EAAED,SAAS,CAACa,IAAV,CAAeD;AAFX,CAAjB;AAMA,eAAef,OAAO,CAAEW,eAAF,EAAmB;AAAEP,EAAAA;AAAF,CAAnB,CAAP,CAAuCC,IAAvC,CAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { connect } from  'react-redux'\r\nimport LogItem from './LogItem'\r\nimport Preloader from '../layout/Preloader'\r\nimport PropTypes from 'prop-types'\r\nimport { getLogs } from '../../actions/logActions'\r\n\r\nconst Logs = ({ log: { logs, filtered, loading }, getLogs }) => {\r\n \r\n    useEffect(() => {\r\n       getLogs()\r\n        //eslint-disable-next-line\r\n    }, [])\r\n\r\n    if(loading || logs === null){\r\n        return <Preloader />\r\n    }\r\n\r\n    return\r\n        <ul className=\"collection with-header\">\r\n            <li className=\"collection-header\">\r\n                <h4 className=\"center\">System Logs</h4>\r\n            </li>\r\n            \r\n      { logs !== null && !loading ? ( <>\r\n                {filtered !== null \r\n                    ? filtered.map(log => (\r\n                        \r\n                            <LogItem log={log} />\r\n                    )) \r\n                        \r\n                    : logs.map(log => (\r\n                \r\n                            <LogItem log={log} />\r\n            )) \r\n                }\r\n            </>) : <Preloader /> }\r\n      </ul>\r\n\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    log: state.log    //assign state.log ( from log:logReducer) to component prop named log\r\n})\r\n\r\nLogs.propTypes = {\r\n    log: PropTypes.object.isRequired,\r\n    getLogs: PropTypes.func.isRequired,\r\n}\r\n\r\n\r\nexport default connect (mapStateToProps, { getLogs })(Logs)\r\n"]},"metadata":{},"sourceType":"module"}