{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\savor\\\\OneDrive\\\\myGitProjects\\\\react-it-logger\\\\client\\\\src\\\\components\\\\techs\\\\TechSelectOptions.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getTechs } from '../../actions/techActions';\n\nconst TechSelectOptions = ({\n  tech: {\n    techs,\n    loading\n  },\n  getTechs\n}) => {\n  useEffect(() => {\n    getTechs(); //eslint-disable-next-line\n  }, []);\n  return !loading && techs !== null && techs.map(t => /*#__PURE__*/React.createElement(\"option\", {\n    key: t._id,\n    value: `${t.firstName} ${t.lastName}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, t.firstName, ' ', t.lastName));\n};\n\nconst mapStateToProps = state => ({\n  tech: state.tech\n});\n\nTechSelectOptions.propTypes = {\n  tech: PropTypes.object.isRequired,\n  getTechs: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, {\n  getTechs\n})(TechSelectOptions);","map":{"version":3,"sources":["C:/Users/savor/OneDrive/myGitProjects/react-it-logger/client/src/components/techs/TechSelectOptions.js"],"names":["React","useEffect","connect","PropTypes","getTechs","TechSelectOptions","tech","techs","loading","map","t","_id","firstName","lastName","mapStateToProps","state","propTypes","object","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,2BAAzB;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAR;AAA4BJ,EAAAA;AAA5B,CAAD,KAA4C;AAElEH,EAAAA,SAAS,CAAC,MAAK;AACXG,IAAAA,QAAQ,GADG,CAEX;AACH,GAHQ,EAGP,EAHO,CAAT;AAKA,SACI,CAACI,OAAD,IAAYD,KAAK,KAAK,IAAtB,IAA8BA,KAAK,CAACE,GAAN,CAAUC,CAAC,iBACrC;AAAQ,IAAA,GAAG,EAAEA,CAAC,CAACC,GAAf;AAAoB,IAAA,KAAK,EAAG,GAAED,CAAC,CAACE,SAAU,IAAGF,CAAC,CAACG,QAAS,EAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,CAAC,CAACE,SADP,EACkB,GADlB,EACuBF,CAAC,CAACG,QADzB,CAD0B,CADlC;AAMH,CAbD;;AAeA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCT,EAAAA,IAAI,EAAES,KAAK,CAACT;AADoB,CAAZ,CAAxB;;AAIAD,iBAAiB,CAACW,SAAlB,GAA8B;AAC1BV,EAAAA,IAAI,EAAEH,SAAS,CAACc,MAAV,CAAiBC,UADG;AAE1Bd,EAAAA,QAAQ,EAAED,SAAS,CAACgB,IAAV,CAAeD;AAFC,CAA9B;AAKA,eAAehB,OAAO,CAAEY,eAAF,EAAmB;AAACV,EAAAA;AAAD,CAAnB,CAAP,CAAsCC,iBAAtC,CAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { getTechs } from '../../actions/techActions'\r\n\r\nconst TechSelectOptions = ({ tech: { techs, loading }, getTechs }) => {\r\n\r\n    useEffect(() =>{\r\n        getTechs()\r\n        //eslint-disable-next-line\r\n    },[])\r\n    \r\n    return (\r\n        !loading && techs !== null && techs.map(t => (\r\n            <option key={t._id} value={`${t.firstName} ${t.lastName}`}>\r\n                {t.firstName}{' '}{t.lastName}\r\n            </option>))\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    tech: state.tech\r\n})\r\n\r\nTechSelectOptions.propTypes = {\r\n    tech: PropTypes.object.isRequired,\r\n    getTechs: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect (mapStateToProps, {getTechs})(TechSelectOptions)\r\n"]},"metadata":{},"sourceType":"module"}