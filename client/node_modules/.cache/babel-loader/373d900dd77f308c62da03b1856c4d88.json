{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\savor\\\\OneDrive\\\\myGitProjects\\\\react-it-logger\\\\src\\\\components\\\\logs\\\\Logs.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport LogItem from './LogItem';\nimport Preloader from '../layout/Preloader';\nimport PropTypes from 'prop-types';\nimport { getLogs } from '../../actions/logActions';\n\nconst Logs = ({\n  log: {\n    logs,\n    loading\n  },\n  getLogs\n}) => {\n  useEffect(() => {\n    getLogs(); //eslint-disable-next-line\n  }, []);\n\n  if (loading || logs === null) {\n    return /*#__PURE__*/React.createElement(Preloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"collection with-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"collection-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, \"System Logs\")), !loading && logs.length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 20\n    }\n  }, \"No Logs To Display\") : logs.map(log => /*#__PURE__*/React.createElement(LogItem, {\n    key: log.id,\n    log: log,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 36\n    }\n  })));\n};\n\nconst mapStateToProps = state => ({\n  log: state.log //assign state.log ( from log:logReducer) to component prop named log\n\n});\n\nLogs.propTypes = {\n  log: PropTypes.object.isRequired\n};\nexport default connect(mapStateToProps, {\n  getLogs\n})(Logs);","map":{"version":3,"sources":["C:/Users/savor/OneDrive/myGitProjects/react-it-logger/src/components/logs/Logs.js"],"names":["React","useEffect","connect","LogItem","Preloader","PropTypes","getLogs","Logs","log","logs","loading","length","map","id","mapStateToProps","state","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAyB,aAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,0BAAxB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,GAAG,EAAE;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAP;AAA0BJ,EAAAA;AAA1B,CAAD,KAAyC;AAElDL,EAAAA,SAAS,CAAC,MAAM;AACbK,IAAAA,OAAO,GADM,CAEZ;AACH,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAGI,OAAO,IAAID,IAAI,KAAK,IAAvB,EAA4B;AACxB,wBAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAED,sBACI;AAAI,IAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ,EAIK,CAACC,OAAD,IAAaD,IAAI,CAACE,MAAL,KAAgB,CAA7B,gBACM;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADN,GAEMF,IAAI,CAACG,GAAL,CAASJ,GAAG,iBAAI,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,GAAG,CAACK,EAAlB;AAAsB,IAAA,GAAG,EAAEL,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,CANX,CADJ;AAWH,CAtBD;;AAwBA,MAAMM,eAAe,GAAGC,KAAK,KAAK;AAC9BP,EAAAA,GAAG,EAAEO,KAAK,CAACP,GADmB,CACZ;;AADY,CAAL,CAA7B;;AAIAD,IAAI,CAACS,SAAL,GAAiB;AACbR,EAAAA,GAAG,EAAEH,SAAS,CAACY,MAAV,CAAiBC;AADT,CAAjB;AAKA,eAAehB,OAAO,CAAEY,eAAF,EAAmB;AAAER,EAAAA;AAAF,CAAnB,CAAP,CAAuCC,IAAvC,CAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { connect } from  'react-redux'\r\nimport LogItem from './LogItem'\r\nimport Preloader from '../layout/Preloader'\r\nimport PropTypes from 'prop-types'\r\nimport { getLogs } from '../../actions/logActions'\r\n\r\nconst Logs = ({ log: { logs, loading }, getLogs }) => {\r\n \r\n    useEffect(() => {\r\n       getLogs()\r\n        //eslint-disable-next-line\r\n    }, [])\r\n\r\n    if(loading || logs === null){\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <ul className=\"collection with-header\">\r\n            <li className=\"collection-header\">\r\n                <h4 className=\"center\">System Logs</h4>\r\n            </li>\r\n            {!loading  && logs.length === 0 \r\n                ? (<p className=\"center\">No Logs To Display</p>) \r\n                : (logs.map(log => <LogItem key={log.id} log={log} />))\r\n            }\r\n      </ul>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    log: state.log    //assign state.log ( from log:logReducer) to component prop named log\r\n})\r\n\r\nLogs.propTypes = {\r\n    log: PropTypes.object.isRequired,\r\n}\r\n\r\n\r\nexport default connect (mapStateToProps, { getLogs })(Logs)\r\n"]},"metadata":{},"sourceType":"module"}