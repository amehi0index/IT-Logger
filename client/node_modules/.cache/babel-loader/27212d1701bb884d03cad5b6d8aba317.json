{"ast":null,"code":"import { GET_LOGS, SET_LOADING, LOGS_ERROR } from '../actions/types';\nconst initialState = {\n  logs: null,\n  current: null,\n  loading: false,\n  error: null\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case GET_LOGS:\n      return { ...state,\n        logs: action.payload,\n        loading: false\n      };\n\n    case SET_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    case LOGS_ERROR:\n      console.error(action.payload);\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return { ...state\n      };\n  }\n});","map":{"version":3,"sources":["C:/Users/savor/OneDrive/myGitProjects/react-it-logger/src/reducers/logReducer.js"],"names":["GET_LOGS","SET_LOADING","LOGS_ERROR","initialState","logs","current","loading","error","state","action","type","payload","console"],"mappings":"AAAA,SACIA,QADJ,EAEIC,WAFJ,EAGIC,UAHJ,QAIO,kBAJP;AAMA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,IADW;AAEjBC,EAAAA,OAAO,EAAE,IAFQ;AAGjBC,EAAAA,OAAO,EAAE,KAHQ;AAIjBC,EAAAA,KAAK,EAAE;AAJU,CAArB;AAOA,gBAAe,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC7C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKV,QAAL;AACI,aAAM,EACF,GAAGQ,KADD;AAEFJ,QAAAA,IAAI,EAAEK,MAAM,CAACE,OAFX;AAGFL,QAAAA,OAAO,EAAE;AAHP,OAAN;;AAKJ,SAAKL,WAAL;AACI,aAAM,EACF,GAAGO,KADD;AAEFF,QAAAA,OAAO,EAAE;AAFP,OAAN;;AAIJ,SAAKJ,UAAL;AACIU,MAAAA,OAAO,CAACL,KAAR,CAAcE,MAAM,CAACE,OAArB;AACA,aAAM,EACF,GAAGH,KADD;AAEFD,QAAAA,KAAK,EAAEE,MAAM,CAACE;AAFZ,OAAN;;AAKJ;AACI,aAAM,EACF,GAAGH;AADD,OAAN;AApBR;AAyBH,CA1BD","sourcesContent":["import { \r\n    GET_LOGS,\r\n    SET_LOADING, \r\n    LOGS_ERROR,\r\n} from '../actions/types'\r\n    \r\nconst initialState = {\r\n    logs: null,\r\n    current: null,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type){\r\n        case GET_LOGS: \r\n            return{\r\n                ...state,\r\n                logs: action.payload,\r\n                loading: false,\r\n            }\r\n        case SET_LOADING:\r\n            return{\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case LOGS_ERROR:\r\n            console.error(action.payload)\r\n            return{\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n       \r\n        default:\r\n            return{\r\n                ...state\r\n            }\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}