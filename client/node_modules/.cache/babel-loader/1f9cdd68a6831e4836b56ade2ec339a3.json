{"ast":null,"code":"import { GET_LOGS, SET_LOADING, LOGS_ERROR } from './types';\n/*export const getLogs = () => {\r\n    return async (dispatch) =>  {\r\n        setLoading()\r\n\r\n        const res = await fetch('/logs')\r\n        const data = await res.json()\r\n\r\n        dispatch({\r\n            type: GET_LOGS,\r\n            payload: data\r\n        })\r\n    }\r\n}*/\n//Get logs from server\n\nexport const getLogs = () => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch('/logs');\n    const data = await res.json();\n    dispatch({\n      type: GET_LOGS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.data\n    });\n  }\n}; //Set loading to true\n\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};","map":{"version":3,"sources":["C:/Users/savor/OneDrive/myGitProjects/react-it-logger/src/actions/logActions.js"],"names":["GET_LOGS","SET_LOADING","LOGS_ERROR","getLogs","dispatch","setLoading","res","fetch","data","json","type","payload","err","response"],"mappings":"AACA,SACIA,QADJ,EAEIC,WAFJ,EAGIC,UAHJ,QAIO,SAJP;AAQA;;;;;;;;;;;;;AAcA;;AACA,OAAO,MAAMC,OAAO,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC7C,MAAI;AAEAC,IAAAA,UAAU;AAEV,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,OAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEAL,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAEV,QADD;AAELW,MAAAA,OAAO,EAAEH;AAFJ,KAAD,CAAR;AAKH,GAZD,CAYE,OAAOI,GAAP,EAAY;AACVR,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAER,UADD;AAELS,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaL;AAFjB,KAAD,CAAR;AAIH;AAGJ,CArBM,C,CAuBP;;AACA,OAAO,MAAMH,UAAU,GAAG,MAAM;AAC5B,SAAM;AACFK,IAAAA,IAAI,EAACT;AADH,GAAN;AAGH,CAJM","sourcesContent":["\r\nimport { \r\n    GET_LOGS,\r\n    SET_LOADING, \r\n    LOGS_ERROR,\r\n} from './types'\r\n\r\n\r\n\r\n/*export const getLogs = () => {\r\n    return async (dispatch) =>  {\r\n        setLoading()\r\n\r\n        const res = await fetch('/logs')\r\n        const data = await res.json()\r\n\r\n        dispatch({\r\n            type: GET_LOGS,\r\n            payload: data\r\n        })\r\n    }\r\n}*/\r\n\r\n//Get logs from server\r\nexport const getLogs = () => async (dispatch) => {\r\n    try {\r\n        \r\n        setLoading()\r\n\r\n        const res = await fetch('/logs')\r\n        const data = await res.json()\r\n\r\n        dispatch({\r\n            type: GET_LOGS,\r\n            payload: data\r\n        })\r\n        \r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGS_ERROR,\r\n            payload: err.response.data\r\n        })\r\n    }\r\n  \r\n    \r\n}\r\n\r\n//Set loading to true\r\nexport const setLoading = () => {\r\n    return{\r\n        type:SET_LOADING\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}