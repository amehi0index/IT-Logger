{"ast":null,"code":"import { GET_LOGS, SET_LOADING, LOGS_ERROR, ADD_LOG, UPDATE_LOG, DELETE_LOG, SET_CURRENT, CLEAR_CURRENT } from './types';\n/*export const getLogs = () => {\r\n    return async (dispatch) =>  {\r\n        setLoading()\r\n\r\n        const res = await fetch('/logs')\r\n        const data = await res.json()\r\n\r\n        dispatch({\r\n            type: GET_LOGS,\r\n            payload: data\r\n        })\r\n    }\r\n}*/\n//Get logs from server\n\nexport const getLogs = () => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch('/logs');\n    const data = await res.json();\n    dispatch({\n      type: GET_LOGS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.data\n    });\n  }\n}; //Add new log\n\nexport const addLog = log => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch('/logs', {\n      method: 'POST',\n      body: JSON.stringify(log),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n    dispatch({\n      type: ADD_LOG,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.data\n    });\n  }\n}; //Delete a log from server\n\nexport const deleteLog = id => async dispatch => {\n  try {\n    setLoading();\n    await fetch(`/logs/${id}`, {\n      method: 'DELETE'\n    });\n    dispatch({\n      type: DELETE_LOG,\n      payload: id\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.data\n    });\n  }\n}; //Update log on server\n\nexport const updateLog = log => async dispatch => {\n  try {\n    setLoading();\n    await fetch(`/logs/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(log),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    dispatch({\n      type: UDATE_LOG,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.data\n    });\n  }\n}; //Set current log\n\nexport const setCurrent = log => {\n  return {\n    type: SET_CURRENT,\n    payload: log\n  };\n}; //Clear current log\n\nexport const clearCurrent = () => {\n  return {\n    type: CLEAR_CURRENT\n  };\n}; //Set loading to true\n\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};","map":{"version":3,"sources":["C:/Users/savor/OneDrive/myGitProjects/react-it-logger/src/actions/logActions.js"],"names":["GET_LOGS","SET_LOADING","LOGS_ERROR","ADD_LOG","UPDATE_LOG","DELETE_LOG","SET_CURRENT","CLEAR_CURRENT","getLogs","dispatch","setLoading","res","fetch","data","json","type","payload","err","response","addLog","log","method","body","JSON","stringify","headers","deleteLog","id","updateLog","UDATE_LOG","setCurrent","clearCurrent"],"mappings":"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","sourcesContent":["\r\nimport { \r\n    GET_LOGS,\r\n    SET_LOADING, \r\n    LOGS_ERROR,\r\n    ADD_LOG,\r\n    UPDATE_LOG,\r\n    DELETE_LOG,\r\n    SET_CURRENT,\r\n    CLEAR_CURRENT,\r\n} from './types'\r\n\r\n/*export const getLogs = () => {\r\n    return async (dispatch) =>  {\r\n        setLoading()\r\n\r\n        const res = await fetch('/logs')\r\n        const data = await res.json()\r\n\r\n        dispatch({\r\n            type: GET_LOGS,\r\n            payload: data\r\n        })\r\n    }\r\n}*/\r\n\r\n//Get logs from server\r\nexport const getLogs = () => async (dispatch) => {\r\n    try {\r\n        \r\n        setLoading()\r\n\r\n        const res = await fetch('/logs')\r\n        const data = await res.json()\r\n\r\n        dispatch({\r\n            type: GET_LOGS,\r\n            payload: data\r\n        })\r\n        \r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGS_ERROR,\r\n            payload: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n//Add new log\r\nexport const addLog = (log) => async (dispatch) => {\r\n    try {\r\n        \r\n        setLoading()\r\n\r\n        const res = await fetch('/logs',  {\r\n            method: 'POST',\r\n            body: JSON.stringify(log),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        const data = await res.json()\r\n\r\n        dispatch({\r\n            type: ADD_LOG,\r\n            payload: data\r\n        })\r\n        \r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGS_ERROR,\r\n            payload: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n//Delete a log from server\r\nexport const deleteLog = (id) => async (dispatch) => {\r\n    try {\r\n        \r\n        setLoading()\r\n\r\n        await fetch(`/logs/${id}`, {\r\n            method: 'DELETE'\r\n        })\r\n\r\n        dispatch({\r\n            type: DELETE_LOG,\r\n            payload: id\r\n        })\r\n        \r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGS_ERROR,\r\n            payload: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n//Update log on server\r\nexport const updateLog = (log) => async (dispatch) => {\r\n    try {\r\n        \r\n        setLoading()\r\n\r\n        await fetch(`/logs/${id}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(log),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n\r\n        dispatch({\r\n            type: UDATE_LOG,\r\n            payload: data\r\n        })\r\n        \r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGS_ERROR,\r\n            payload: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n//Set current log\r\nexport const setCurrent = (log) => {\r\n    return{\r\n        type: SET_CURRENT,\r\n        payload: log\r\n    }\r\n}\r\n\r\n//Clear current log\r\nexport const clearCurrent = ()=> {\r\n    return{\r\n        type: CLEAR_CURRENT,\r\n    }\r\n}\r\n\r\n//Set loading to true\r\nexport const setLoading = () => {\r\n    return{\r\n        type:SET_LOADING\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}